name: Build image

on:
  workflow_call:
    inputs:
      name:
        description: "Image name"
        type: string
      build_args:
        description: "Build args for docker build"
        type: string
        required: false
        default: ""
    outputs:
      image:
        description: "Image uri"
        value: ${{ jobs.push.outputs.image }}
      tag:
        description: "Image tag"
        value: ${{ jobs.push.outputs.tag }}

env:
  IMAGE_NAME: ${{ inputs.name }}

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    outputs:
      image: ${{ steps.push.outputs.image }}
      tag: ${{ steps.push.outputs.tag }}

    steps:
      - uses: actions/checkout@v3

      - name: Build image
        run: |
          build_args="${{ inputs.build_args }}"
          echo "Build args: ${build_args}"
          
          docker build . --file Dockerfile ${build_args} --tag $IMAGE_NAME \
            --label "runnumber=${GITHUB_RUN_ID}" \
            --label "org.opencontainers.image.source=https://github.com/${GITHUB_REPOSITORY}"


      - name: Log in to registry
        # This is where you will update the personal access token to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push image
        id: push
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          if [ "$VERSION" == "master" ] || [ "$VERSION" == "main" ]; then
            VERSION="latest"
          fi
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          echo "image=$IMAGE_ID" >> $GITHUB_OUTPUT
          echo "tag=$VERSION" >> $GITHUB_OUTPUT